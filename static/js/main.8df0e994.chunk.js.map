{"version":3,"sources":["components/header/index.js","components/main/utils.js","components/main/components/currentweather/location/index.js","components/main/components/currentweather/index.js","components/main/components/detailedweather/index.js","components/main/index.js","components/footer/index.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","months","ChooseLocation","state","userInput","formattedLocation","open","debounce","callback","wait","timeout","_len2","arguments","length","args","Array","_key2","clearTimeout","setTimeout","apply","checkApi","_this","value","fetch","concat","then","res","json","console","log","formattedRes","map","obj","Key","LocalizedName","Country","setState","handleUserInput","e","target","handleUserClick","key","localizedName","click","weatherByCityKey","prevState","_this2","this","react","type","onChange","onClick","bind","Component","CurrentWeather","_ref","time","temperature","icon","currentweather_location","date","currentDate","Date","toLocaleDateString","weekday","getDate","getMonth","localObservationDate","src","alt","Value","Math","round","currentTime","hours","getHours","minutes","getMinutes","localObservationTime","DetailedWeather","num","realfeel","weathertext","pressure","precipitation","winddirection","windspeed","humidity","dewpoint","visibility","cloudcover","uvindex","uvindextext","Unit","Number","Localized","windspeedtoms","toFixed","Main","initialState","status","getWeather","undefined","_res$","LocalObservationDateTime","Temperature","Metric","RealFeelTemperature","WeatherText","WeatherIcon","PrecipitationSummary","Precipitation","Pressure","DewPoint","RelativeHumidity","Visibility","Wind","Direction","Speed","CloudCover","UVIndex","UVIndexText","catch","err","_this$state","_this$state$initialSt","Fragment","role","currentweather","detailedweather","Footer","href","rel","aria-label","App","header","main_Main","footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8df0e994.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => \n\t<header className='header'>\n    <div className='wrapper'>\n      <h3>Weatherility</h3>\n      <p>прогноз погоди без підступності</p>\n    </div>\n  </header>\n\nexport default Header;","const months = ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', \n\t\t\t\t\t\t\t\t'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня'];\n\nexport const localObservationTime = (date) => {\n\tconst currentTime = new Date(date);\n\n\tconst hours = currentTime.getHours();\n\tconst minutes = currentTime.getMinutes();\n\n\treturn `${hours} : ${minutes}`;\n};\n\nexport const localObservationDate = (date) => {\n\tconst currentDate = new Date(date);\n\n\treturn `${currentDate.toLocaleDateString('uk-UA', { weekday: 'long' })}, ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n};\n\nexport const pressuremmHg = function(num) {\n\treturn Math.round(num*0.750061683);\n}\n\nexport const windspeedtoms = (num) => {\n\tif (Number(num)) {\n\t\treturn Math.round(num*1000/3600);\n\t}\n\telse {\n\t\treturn '---';\n\t}\n}","import React, { Component, Fragment } from 'react';\n\nclass ChooseLocation extends Component {\n\tstate = {\n\t\tuserInput: 'Київ',\n\t\tformattedLocation: [],\n\t\topen: false\n\t}\n\n\tdebounce = (callback, wait) => {\n\t  let timeout = null\n\t  return (...args) => {\n\t    const next = () => callback(...args)\n\t    clearTimeout(timeout)\n\t    timeout = setTimeout(next, wait)\n\t  }\n\t}\n\n\tcheckApi = this.debounce((value) => {\n\t\tconst res = fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=JgEbWxgFwhWVfUfVArF9AH6sl6E1VlNN&q=${value}&language=uk-UA`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst formattedRes = res.map(\n\t\t\t\t\t(obj) => ({\n\t\t\t\t\t\t\tKey: obj.Key,\n\t\t\t\t\t\t\tLocalizedName: obj.LocalizedName,\n\t\t\t\t\t\t\tCountry: obj.Country.LocalizedName\n\t\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis.setState({\n\t\t\t\t\tformattedLocation: formattedRes\n\t\t\t\t})\n\t\t\t});\n\t}, 300, true)\n\n\thandleUserInput = (e) => {\n\t\tconst userInput = e.target.value;\n    this.setState({\n      userInput\n    })\n\n    if (userInput.length > 3 ) {\n    \tthis.checkApi(userInput);\n    }\n  }\n\n  handleUserClick = (key, localizedName, click) => {\n  \tthis.props.weatherByCityKey(key);\n\n  \tconst prevState = (this.state.open && click);\n\n  \tthis.setState({\n      userInput: localizedName,\n      open: prevState ? false : true\n    })\n  }\n\n\trender() {\n\n    return (\n\t\t\t<Fragment>\n\t\t\t\t<div className='findlocation'>\n\t\t\t\t\t<input type=\"text\" onChange={this.handleUserInput} onClick={this.handleUserClick.bind(this.click)} value={this.state.userInput} />\n\n\t\t\t\t\t<div className={`chooselocation ${this.state.open ? '' : 'close'}`}>\n\t\t\t\t\t\t{this.state.formattedLocation.map(\n\t\t\t\t\t\t\t(obj) => (\n\t\t\t\t\t\t\t\t<p key={obj.Key} onClick={this.handleUserClick.bind(this, obj.Key, obj.LocalizedName)}>{obj.LocalizedName}, {obj.Country}</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</Fragment>\n\t\t);\n  }\n}\n\nexport default ChooseLocation;","import React from 'react';\nimport {localObservationTime, localObservationDate} from '../../utils.js';\nimport ChooseLocation from './location';\n\nconst CurrentWeather = ({ weatherByCityKey, time, temperature, icon }) => {\n\treturn (\n\t\t<section className='current-information'>\n\t\t\t<div className='left-side'>\n\t\t\t\t<ChooseLocation weatherByCityKey={weatherByCityKey} />\n\t\t\t\t<p className='date'>{!!time && localObservationDate(time)}</p>\n\t\t\t</div>\n\t\t\t<div className='right-side'>\n\t\t\t\t<div className='weather-icon'>\n\t\t\t\t\t<img src={`weather-icons/${icon}-s.png`} alt='icon' />\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<p className='temperature'>{temperature && !!temperature.Value && Math.round(temperature.Value)}&#176;</p>\n\t\t\t\t\t<p>{!!time && localObservationTime(time)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default CurrentWeather;","import React from 'react';\nimport {pressuremmHg, windspeedtoms} from '../../utils.js';\n\nconst DetailedWeather = (\n\t{ \n\t\ttemperature, \n\t\trealfeel, \n\t\tweathertext, \n\t\ticon, \n\t\tpressure, \n\t\tprecipitation, \n\t\twinddirection, \n\t\twindspeed,\n\t\thumidity, \n\t\tdewpoint, \n\t\tvisibility, \n\t\tcloudcover, \n\t\tuvindex, \n\t\tuvindextext\n\t}) => {\n\n\treturn (\n\t\t<section className='detailed-weather'>\n\t\t\t<p className='weather-type'>Поточна погода</p>\n\t\t\t\n\t\t\t<div className='head-info'>\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className='temperature'>{Math.round(temperature.Value)}&#176;{temperature.Unit}</h1>\n\t\t\t\t\t<p className='realfeel'>Відчувається як: <span>{Math.round(realfeel.Value)}&#176;{temperature.Unit}</span></p>\n\t\t\t\t\t<p className='description'>{weathertext}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='weather-icon'>\n\t\t\t\t\t<img src={`weather-icons/${icon}-s.png`} alt='icon' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='extra-info'>\n\t\t\t\t<p>Тиск: <span>{Number(pressure.Value) ? pressuremmHg(pressure.Value) : '---'} мм. рт. ст.</span></p>\n\t\t\t\t<p>Опади: <span>{Number(precipitation.Value) ? precipitation.Value : '---'} мм</span></p>\n\t\t\t\t<p>Вітер <span>{winddirection.Localized}, {Number(windspeed.Value) ? windspeedtoms(windspeed.Value) : '---'} м/с</span></p>\n\t\t\t\t<p>Вологість: <span>{humidity}%</span></p>\n\t\t\t\t<p>Точка роси: <span>{dewpoint.Value}&#176;{temperature.Unit}</span></p>\n\t\t\t\t<p>Видимість: <span>{visibility.Value.toFixed()} км</span></p>\n\t\t\t\t<p>Хмарний покрив: <span>{cloudcover}%</span></p>\n\t\t\t\t<p>Індекс УФ: <span>{uvindex} ({uvindextext})</span></p>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default DetailedWeather;","import React, { Component } from 'react';\nimport CurrentWeather from './components/currentweather';\nimport DetailedWeather from './components/detailedweather';\n\nexport default class Main extends Component {\n\tstate = {\n\t\tinitialState: {\n\t\t},\n\t\tstatus: false\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getWeather();\n\t}\n\n\tgetWeather = (key = 324505) => {\n\n\t\tfetch(`https://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=JgEbWxgFwhWVfUfVArF9AH6sl6E1VlNN&language=uk-ua&details=true`)\n\t\t.then((res) => {\n\t\t\treturn res.json()\n\t\t}).then((res) => {\n\t\t\tconsole.log('res', res[0]);\n\t\t\tconst { \n\t\t\t\tLocalObservationDateTime: time,\n\t\t\t\tTemperature: {Metric: temperature},\n\t\t\t\tRealFeelTemperature: {Metric: realfeel},\n\t\t\t\tWeatherText: weathertext,\n\t\t\t\tWeatherIcon: icon,\n\t\t\t\tPrecipitationSummary: {Precipitation: {Metric: precipitation}},\n\t\t\t\tPressure: {Metric: pressure},\n\t\t\t\tDewPoint: {Metric: dewpoint},\n\t\t\t\tRelativeHumidity: humidity,\n\t\t\t\tVisibility: {Metric: visibility},\n\t\t\t\tWind: {Direction: winddirection},\n\t\t\t\tWind: {Speed: {Metric: windspeed}},\n\t\t\t\tCloudCover: cloudcover,\n\t\t\t\tUVIndex: uvindex,\n\t\t\t\tUVIndexText: uvindextext\n\t\t\t} = res[0];\n\n\t\t\tthis.setState({\n\t\t\t\tstatus: true,\n\t\t\t\tinitialState: {\n\t\t\t\t\ttime,\n\t\t\t\t\ttemperature,\n\t\t\t\t\trealfeel,\n\t\t\t\t\tweathertext,\n\t\t\t\t\ticon,\n\t\t\t\t\tprecipitation,\n\t\t\t\t\tpressure,\n\t\t\t\t\tdewpoint,\n\t\t\t\t\thumidity,\n\t\t\t\t\tvisibility,\n\t\t\t\t\twinddirection,\n\t\t\t\t\twindspeed,\n\t\t\t\t\tcloudcover,\n\t\t\t\t\tuvindex,\n\t\t\t\t\tuvindextext\n\t\t\t\t}\n\t\t\t})\n\n\t\t}).catch((err) => {\n\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\tweatherByCityKey = (key) => {\n\t\tthis.getWeather(key);\n\t}\n\n\trender() {\n\t\tconst { initialState: { temperature, time, icon }, status } = this.state;\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t{ status && \n\t\t\t\t\t<main className='main' role='main'>\n\t\t\t\t\t\t<CurrentWeather weatherByCityKey={this.weatherByCityKey} time={time} temperature={temperature} icon={icon} />\n\t\t\t\t\t\t<DetailedWeather {...this.state.initialState}  />\n\t\t\t\t\t</main>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","import React from 'react';\n\nconst Footer = (props) => \n\t<footer className='footer'>\n    <p>\n    \t<span>&#169; 2019 </span>\n\t    <a\n\t      className=\"link\"\n\t      href=\"https://github.com/uastyle\"\n\t      target=\"_blank\"\n\t      rel=\"noopener noreferrer me\"\n\t      aria-label=\"This is an external link (opens in a new tab)\"\n\t    >\n\t      UA Style\n\t    </a>\n\t  </p>\n  </footer>\n\nexport default Footer;","import React, { Component } from 'react';//import React from 'react';\nimport Header from './header';\nimport Main from './main';\nimport Footer from './footer';\nimport './scss/app.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}